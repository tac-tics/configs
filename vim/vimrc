call pathogen#infect()
syntax on

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" TABS
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set tabstop=4
set shiftwidth=4
set softtabstop=4
set smarttab
set expandtab
set nobackup
set nowritebackup

filetype on
filetype plugin indent on

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" HISTORY
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set viminfo='1000,f1,\"500

set undofile
set undodir=$HOME/.vim/undo
set undolevels=1000
set undoreload=10000

augroup FileTypes
    autocmd!
    autocmd Filetype xml setlocal autoindent nocindent nosmartindent indentexpr=
    autocmd Filetype html setlocal autoindent nocindent nosmartindent indentexpr=
augroup end

augroup RestoreCursor
    autocmd!
    autocmd BufReadPost * call setpos(".", getpos("'\""))
augroup end

augroup EqualizeWindowsOnResize
    autocmd!
    autocmd VimResized * execute "normal! \<c-w>="
augroup end

"runtime! config/tabs.vim
"runtime! config/history.vim
runtime! config/functions.vim
runtime! config/lineno.vim
" runtime! config/keybinds.vim

hi StatusLine cterm=reverse ctermfg=3 ctermbg=7 gui=none
hi StatusLineNC cterm=reverse ctermfg=0 ctermbg=7 gui=none

set statusline=%F

set wildmode=list:longest

let mapleader = ","
nnoremap <leader>r :source $MYVIMRC<cr>:echo "Reloaded .vimrc"<cr>
nnoremap <leader>s :call RStrip()<cr>:echo "Stripped trailing whitespace."<cr>
noremap <leader>l :set number!<cr>

" Requires NERDTree
nnoremap <leader>t :NERDTreeToggle<cr>
nnoremap <leader>t :NERDTreeToggle<cr>

" Requires fzf.vim
nnoremap <leader>f :Files<cr>
nnoremap <leader>gc :Commits<cr>
nnoremap <leader>gf :BCommits<cr>

nnoremap <C-j> 10jz.
nnoremap <C-k> 10kz.
nnoremap <C-f> <C-w>_

nnoremap <C-c> <nop>
inoremap <C-c> <esc>l
nnoremap q: <nop>

" Sets special characters to display for trailing space
" and other obnoxious characters.
"
" See: https://www.compart.com/en/unicode/
"
" üûòüûùüûùüûù   <- for a tab
" ‚ñë‚ñë‚ñë    <- for trailing whitespace
" ‚ê£      <- non-breaking space
set listchars=tab:üûòüûù,trail:‚ñë,nbsp:‚ê£
set list
